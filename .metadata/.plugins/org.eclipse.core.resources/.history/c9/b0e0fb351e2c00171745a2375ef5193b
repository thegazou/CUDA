#include <iostream>
#include "Grid.h"
#include "Device.h"
#include "MathTools.h"
#include "limits.h"

using std::cout;
using std::endl;

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Imported	 	*|
 \*-------------------------------------*/

#include "Slice.h"
#include "SliceVariateur.h"

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

bool useSlice(void);

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

bool useSingleSlice(void);
bool useVariateur(void);

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

bool useSlice()
    {
    bool isOk = true;
    isOk &= useSingleSlice();
//    isOk &= useVariateur();

    return isOk;
    }

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

bool useSingleSlice()
    {
    uint nbSlice = 100000;
    float result;

    dim3 dg = dim3(1, 1, 1);
    dim3 db = dim3(1, 1, 1);
    Grid grid(dg, db);
    Slice slice(grid, nbSlice);
    slice.run();
    result = slice.getResult();
    printf("Result = %f\n", result);
    return MathTools::isEquals(result, PI_FLOAT, 0.0001f);
    }

bool useVariateur()
    {
    SliceVariateur sliceVariateur(1024, 1024, 1, UINT_MAX / 10, UINT_MAX - 10000, UINT_MAX / 12);
    return sliceVariateur.run();
    }

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

