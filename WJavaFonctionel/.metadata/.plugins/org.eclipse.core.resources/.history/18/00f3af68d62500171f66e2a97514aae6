
package ch.arc.cours.lamda.interfacefonctionelle.neu;

import java.util.function.Consumer;
import java.util.function.Predicate;

import ch.arc.cours.lamda.interfacefonctionelle.neu.tools.Homme;
import ch.arc.cours.lamda.interfacefonctionelle.neu.tools.HommeTools;

public class UseBoth
	{

	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/

	public static void main(String[] args)
		{
		main();
		}

	public static void main()
		{
		int n = 10;

		version1(n);

		// lamda
			{
			version2(n);
			version3(n);
			}
		}

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/

	private static void version1(int n)
		{
		Iterable<Homme> iterable = HommeTools.create(n);

		Predicate<Homme> predicate = new Predicate<Homme>()
			{

			@Override
			public boolean test(Homme h)
				{
				return h.getHauteur() > 50;
				}
			};

		Consumer<Homme> consumer = new Consumer<Homme>()
			{

			@Override
			public void accept(Homme t)
				{
				t.setPoids(t.getPoids() * -1);
				}
			};

		HommeTools.filterModify(iterable, predicate, consumer);

		System.out.println(iterable);
		}

	/*------------------------------*\
	|*				lamda			*|
	\*------------------------------*/

	private static void version2(int n)
		{
		// TODO Auto-generated method stub

		}

	private static void version3(int n)
		{
		// TODO Auto-generated method stub

		}

	}
